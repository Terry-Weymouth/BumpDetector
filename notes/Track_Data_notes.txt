-- See, also, ExamplePostGisQueries.txt; in dir PostGIS_exercise

create table bicycle_track (
  track_id serial primary key,
  file_path varchar(256),
  max_distance float,
  time timestamp not null
  );

create table bicycle_data (
  id serial primary key,
  track_id integer,
  g1 integer,
  g2 integer,
  g3 integer,
  g4 integer,
  g5 integer,
  g6 integer,
  gmax integer,
  time timestamp,
  lat float,
  long float,
  alt float,
  speed float,
  delta_time integer,
  long_lat_original geography(POINT,4326),
  long_lat_remapped geography(POINT,4326),  -- projected track point after match to road
  nearest_road_id integer,
  nearest_road_distance float
  );
  
CREATE INDEX long_lat_original_gix ON bicycle_data USING GIST ( long_lat_original );
CREATE INDEX long_lat_remapped_gix ON bicycle_data USING GIST ( long_lat_remapped );
  
UPDATE bicycle_data SET long_lat_original = ST_SetSRID(ST_MakePoint(long, lat), 4326)::geography;

SELECT long, lat, ST_AsEWKT(long_lat_original) from bicycle_data;

-- knn nearest neighbors search for nearest feature

-- https://postgis.net/workshops/postgis-intro/knn.html
-- https://wiki.openstreetmap.org/wiki/Key:highway#Roads

select track.id, track.track_id, osm.osm_id, ST_AsEWKT(track.long_lat_original), ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original)
from bicycle_data as track, planet_osm_line as osm
where track.id < 5 AND osm.name='Forestdale Road' and ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 6
order by st_distance;

select track.id, track.track_id, osm.name, osm.highway, osm.osm_id, ST_AsEWKT(track.long_lat_original), ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original)
from bicycle_data as track, planet_osm_line as osm
where track.id=1 and ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 100
order by st_distance;

select track.id, track.track_id, osm.name, osm.highway, osm.osm_id, ST_AsEWKT(track.long_lat_original), ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original)
from bicycle_data as track, planet_osm_line as osm
where track.id=1 and ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 100
order by st_distance limit 1;

select track.id, osm.osm_id, osm.name, osm.highway, ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) 
from bicycle_data as track, planet_osm_line as osm
where track.id=1 and ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 30.0
order by st_distance limit 1;

select track.id, osm.osm_id, osm.name, osm.highway, ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) 
from bicycle_data as track, planet_osm_line as osm
where ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 70.0
and highway is not null  
and not (highway in ('footway', 'service', 'tertiary_link'))
order by track.id, st_distance;

select distinct highway, name from ( 
select track.id, osm.osm_id, osm.name as name, osm.highway as highway, 
ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) 
from bicycle_data as track, planet_osm_line as osm
where ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 70.0
and not (highway in ('footway', 'service', 'tertiary_link')) order by track.id, st_distance ) foo;

select ST_AsGeoJSON(ST_Transform(way,4326))


select id, ST_Transform(projection,4326)::geography as pt from (
select track.id, track.long_lat_original as pt,
	ST_ClosestPoint(ST_Transform(osm.way,4326)::geometry,track.long_lat_original::geometry) as projection
from bicycle_data as track join planet_osm_line as osm on (track.nearest_road_id = osm.osm_id)
where track.id=1) foo;


update bicycle_data as new_track set long_lat_remapped=ST_Transform(results.projection,4326)::geography
from (
select track.id as id, ST_ClosestPoint(ST_Transform(osm.way,4326)::geometry,track.long_lat_original::geometry) as projection
from bicycle_data as track, planet_osm_line as osm where track.nearest_road_id=osm.osm_id
) results
where new_track.id=results.id;


SELECT id, lat, long, 
ST_Y(long_lat_remapped::geometry) as new_lat, ST_X(long_lat_remapped::geometry) as new_long, 
ST_AsEWKT(long_lat_remapped)
FROM bicycle_data LIMIT 10;

SELECT id, nearest_road_distance, ST_Distance(long_lat_original, long_lat_remapped)
FROM bicycle_data LIMIT 10;

select ST_Y(long_lat_remapped::geometry) as lat, ST_X(long_lat_remapped::geometry) as long, nearest_road_distance from bicycle_data order by id;


Samples

SELECT *
    FROM weather INNER JOIN cities ON (weather.city = cities.name);
    
# closest point on line to point
ST_AsText(ST_ClosestPoint(line,pt)) As cp_line_pt

select track.id, osm.name from bicycle_data as track, planet_osm_line as osm where track.id in (5, 6, 7) 
	and track.nearest_road_id = osm.osm_id;

UPDATE mytable SET geog = ST_SetSRID(ST_MakePoint(long, lat), 4326)::geography;

UPDATE bicycle_data SET long_lat_original_gix = 'Dramatic';
  
CREATE TABLE ptzgeogwgs84(gid serial PRIMARY KEY, name geography(POINT,4326) );

-- See the contents of the metadata view
SELECT * FROM geography_columns;

-- You can insert data into the table the same as you would if it was using a GEOMETRY column:

-- Add some data into the test table
INSERT INTO global_points (name, location) VALUES ('Town', 'SRID=4326;POINT(-110 30)');
INSERT INTO global_points (name, location) VALUES ('Forest', 'SRID=4326;POINT(-109 29)');
INSERT INTO global_points (name, location) VALUES ('London', 'SRID=4326;POINT(0 49)');

-- Creating an index works the same as GEOMETRY. PostGIS will note that the column type is GEOGRAPHY and create an appropriate sphere-based index instead of the usual planar index used for GEOMETRY.

-- Index the test table with a spherical index
  CREATE INDEX global_points_gix ON global_points USING GIST ( location );
Query and measurement functions use units of meters. So distance parameters should be expressed in meters, and return values should be expected in meters (or square meters for areas).

-- Show a distance query and note, London is outside the 1000km tolerance
  SELECT name FROM global_points WHERE ST_DWithin(location, 'SRID=4326;POINT(-110 29)'::geography, 1000000);
You can see the power of GEOGRAPHY in action by calculating how close a plane flying from Seattle to London (LINESTRING(-122.33 47.606, 0.0 51.5)) comes to Reykjavik (POINT(-21.96 64.15)).

-- Distance calculation using GEOGRAPHY (122.2km)
  SELECT ST_Distance('LINESTRING(-122.33 47.606, 0.0 51.5)'::geography, 'POINT(-21.96 64.15)'::geography);

-- All roads (as lines from planet_osm_line) that are in any track data
select ST_AsGeoJSON(ST_Transform(way,4326))
from (select distinct nearest_road_id as id from bicycle_data) as roads
    join planet_osm_line as osm
    on (roads.id=osm.osm_id);

select distinct osm.name
from (select distinct nearest_road_id as id from bicycle_data) as roads
    join planet_osm_line as osm
    on (roads.id=osm.osm_id);

SELECT
   DISTINCT ON (road.osm_id)
   road.osm_id, bicycle_data.id, ST_Distance(road.way, bicycle_data.long_lat_original)  as dist
FROM  planet_osm_line As road, bicycle_data
WHERE ST_DWithin(road.way, bicycle_data.long_lat_original, 70)
    and not (road.highway='footway')
ORDER BY road.osm_id, bicycle_data.id, dist;

-- Distance to nearest road
-- --  Old method
select track.id, osm.osm_id, osm.name, osm.highway,
        ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) as dist
    from bicycle_data as track, planet_osm_line as osm
    where track.track_id=1 and track.id=32
        and ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 70.0
        and highway is not null
        and not (highway in ('footway', 'tertiary_link', 'motorway'))
        order by  ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) limit 1;

-- --  New method
select distinct on (track.id) track.id, osm.osm_id, osm.name, osm.highway,
        ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) as dist
    from bicycle_data as track, planet_osm_line as osm
    where track.track_id=1
        and ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 20.0
        and highway is not null
        and not (highway in ('footway', 'tertiary_link', 'motorway'))
        order by  track.id, ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original);

-- --  New method as update for a given track
update bicycle_data
set nearest_road_id = new_data.osm_id, nearest_road_distance = new_data.dist
from (select distinct on (track.id) track.id, osm.osm_id, osm.name, osm.highway,
        ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) as dist
    from bicycle_data as track, planet_osm_line as osm
    where track.track_id=1
        and ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 20.0
        and highway is not null
        and not (highway in ('footway', 'tertiary_link', 'motorway'))
        order by  track.id, ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original)
    ) as new_data
where bicycle_data.id = new_data.id ;


-- road graph for a given track
select one.osm_id, two.osm_id, ST_Distance(ST_Transform(one.way,4326),ST_Transform(two.way,4326)) as dist from
    planet_osm_line as one, planet_osm_line as two
    where one.osm_id < two.osm_id
        and one.osm_id in (select distinct nearest_road_id from bicycle_data bd where bd.track_id=1)
        and two.osm_id in (select distinct nearest_road_id from bicycle_data bd where bd.track_id=1)
        and not one.osm_id = two.osm_id
        and ST_Distance(ST_Transform(one.way,4326),ST_Transform(two.way,4326)) < 4
    order by one.osm_id, two.osm_id;


-- get data to create a lookup table osm_id -> name for all osm_id's in track data (e.g. nearest road)
select distinct osm_id, name from planet_osm_line as oam, bicycle_data as bd
where osm_id = nearest_road_id
    and track_id = 1
order by osm_id;

-- alternative to above
select osm_id, name from planet_osm_line,
            (select distinct nearest_road_id from bicycle_data bd where bd.track_id={track_id}) as track
        where osm_id = track.nearest_road_id

-- data to populate a table or dictionary of point to road distance
select track.id, osm_id, ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) as dist
from bicycle_data as track, planet_osm_line as osm
where track.track_id = 1
    and osm.osm_id in (select distinct nearest_road_id from bicycle_data bd where bd.track_id=1)
    and ST_Distance(ST_Transform(osm.way,4326),track.long_lat_original) < 10;

-- get the closest point on a line (for map matching)

select  ST_AsText(ST_ClosestPoint(line, point)) as cp1,
        ST_AsText(ST_ClosestPoint(point, line)) as cp2,
        ST_AsText(point),
        ST_AsText(ST_ShortestLine(point, line)) as line_between1,
        ST_AsText(ST_ShortestLine(line, point)) as line_between2,
        ST_Distance(point,line),
        ST_Length(ST_ShortestLine(line, point))
--        ST_AsText(ST_StartPoint(ST_ShortestLine(line, point)::geometry)),
--        ST_AsText(ST_EndPoint(ST_ShortestLine(line, point)::geometry))
	from
    	(select ST_Transform(way,4326) as line from planet_osm_line where osm_id=8699583) as a,
    	(select long_lat_original as point from bicycle_data where id=27) as b;

POINT(-83.159392167 42.49512)
POINT(-83.159392167 42.49512)
POINT(-83.159392167 42.49512)
LINESTRING(-83.159392167 42.49512,-83.15942204707504 42.49511930714997)
LINESTRING(-83.159392167 42.49512,-83.15942204707504 42.49511930714997)

select ST_AsText(ST_Transform(way,4326)) from planet_osm_line where osm_id=8699583;
select ST_AsText(long_lat_original) as point from bicycle_data where id=27;

 LINESTRING(-83.15936009999999 42.49339650051727,-83.1593622 42.49347670051727,
 -83.159365 42.493549200517265,-83.1593764 42.493839900517294,-83.1593806 42.4939471005173,
 -83.15938539999999 42.494069800517295,-83.159388 42.49413600051731,
 -83.15939389999998 42.494330300517326,-83.15939629999998 42.49440790051732,
 -83.15940269999999 42.49461900051733,-83.1594065 42.494742300517345,
 -83.159408 42.49479200051732,-83.15941419999999 42.494938100517345,
 -83.15941879999998 42.49504500051735,-83.15942019999999 42.49507600051735,
 -83.15943499999999 42.495423000517384,-83.15948029999998 42.49651070051744,
 -83.15949569999998 42.49688160051744,-83.1595564 42.496956900517446)

 LINESTRING(-83.15936009999999 42.49339650051727,-83.1593622 42.49347670051727,
 -83.159365 42.493549200517265)

 POINT(-83.159392167 42.49512)

SELECT ST_AsText( ST_ClosestPoint(pt,line)) AS cp_pt_line,
       ST_AsText( ST_ClosestPoint(line,pt)) AS cp_line_pt
    FROM (SELECT 'POINT(-83.159392167 42.49512)'::geometry AS pt,
                 'LINESTRING(-83.15936009999999 42.49339650051727,-83.1593622 42.49347670051727,
 -83.159365 42.493549200517265,-83.1593764 42.493839900517294,-83.1593806 42.4939471005173,
 -83.15938539999999 42.494069800517295,-83.159388 42.49413600051731,
 -83.15939389999998 42.494330300517326,-83.15939629999998 42.49440790051732,
 -83.15940269999999 42.49461900051733,-83.1594065 42.494742300517345,
 -83.159408 42.49479200051732,-83.15941419999999 42.494938100517345,
 -83.15941879999998 42.49504500051735,-83.15942019999999 42.49507600051735,
 -83.15943499999999 42.495423000517384,-83.15948029999998 42.49651070051744,
 -83.15949569999998 42.49688160051744,-83.1595564 42.496956900517446)'::geometry AS line ) AS t;

select  ST_AsText(ST_ClosestPoint(line, point)) as cp1,
        ST_AsText(ST_ClosestPoint(point, line)) as cp2,
        ST_AsText(point),
        ST_AsText(ST_ShortestLine(point, line)) as line_between1,
        ST_AsText(ST_ShortestLine(line, point)) as line_between2,
	from
    	(select ST_Transform(way,4326) as line from planet_osm_line where osm_id=8699583) as a,
    	(select long_lat_original as point from bicycle_data where id=27) as b;

select ST_GeometryType(way) as line from planet_osm_line where osm_id=8699583;
select ST_GeometryType(ST_Transform(way,4326)) from planet_osm_line where osm_id=8699583;

SELECT ST_Distance(
  'SRID=4326;POINT(-83.159392167 42.49512)'::geography::geometry,
  'SRID=4326;POINT(-83.15942204707504 42.49511930714997)'::geography::geometry
  );

SELECT Find_SRID('public', 'planet_osm_line', 'line');

SELECT ST_SRID(point), ST_SRID(line), ST_GeometryType(point), ST_GeometryType(line)
from
    	(select ST_Transform(way,4326) as line from planet_osm_line where osm_id=8699583) as a,
    	(select long_lat_original as point from bicycle_data where id=27) as b;
